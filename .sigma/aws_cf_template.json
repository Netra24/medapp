{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "This template creates the stack for project MedApp. Generated by Sigma",
  "Parameters": {
    "lambdaCodeBucketParameter": {
      "Type": "String",
      "Description": "Name of the S3 bucket containing the Lambda deployment package"
    },
    "lambdaCodeKeyParameter": {
      "Type": "String",
      "Description": "S3 key of the Lambda deployment package"
    }
  },
  "Outputs": {
    "httpApiguploadToS3ApiRoutePUTupload": {
      "Description": "URL of uploadToS3Api/upload:PUT endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "httpApiguploadToS3Api"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".amazonaws.com",
            "/audio",
            "/upload"
          ]
        ]
      }
    },
    "MedApp": {
      "Description": "ARN of Lambda function MedApp",
      "Value": {
        "Fn::GetAtt": [
          "MedApp",
          "Arn"
        ]
      }
    }
  },
  "Resources": {
    "httpApiguploadToS3Api": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Description": "An HTTP API generated by Sigma",
        "Name": "uploadToS3Api",
        "ProtocolType": "HTTP"
      }
    },
    "httpApiguploadToS3ApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "httpApiguploadToS3Api"
        },
        "Description": "Stage of API",
        "StageName": "audio",
        "AutoDeploy": true
      }
    },
    "MedApp": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "FunctionName": "MedApp",
        "Description": "Invokes functions defined in MedApp.js in project MedApp. Generated by Sigma.",
        "Code": {
          "S3Bucket": {
            "Ref": "lambdaCodeBucketParameter"
          },
          "S3Key": {
            "Ref": "lambdaCodeKeyParameter"
          }
        },
        "MemorySize": 128,
        "Handler": "MedApp.handler",
        "Timeout": 60,
        "Runtime": "nodejs10.x",
        "Layers": [],
        "TracingConfig": {
          "Mode": "PassThrough"
        },
        "Role": {
          "Fn::GetAtt": [
            "MedAppExecutionRole",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "SIGMA_AWS_ACC_ID": {
              "Ref": "AWS::AccountId"
            }
          }
        }
      }
    },
    "MedAppExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
        ],
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Action": [
                "sts:AssumeRole"
              ],
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              }
            }
          ]
        }
      }
    },
    "httpApiguploadToS3ApiIntegrationMedApp": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "httpApiguploadToS3Api"
        },
        "Description": "Integration of function: MedApp to HTTP API: uploadToS3Api",
        "IntegrationType": "AWS_PROXY",
        "PayloadFormatVersion": "2.0",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "MedApp",
            "Arn"
          ]
        }
      }
    },
    "httpApiguploadToS3ApiRoutePUTupload": {
      "Type": "AWS::ApiGatewayV2::Route",
      "DependsOn": [
        "httpApiguploadToS3ApiIntegrationMedApp"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "httpApiguploadToS3Api"
        },
        "RouteKey": "PUT /upload",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "httpApiguploadToS3ApiIntegrationMedApp"
              }
            ]
          ]
        }
      }
    },
    "httpApiguploadToS3ApiRoutePUTuploadPermission": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Ref": "MedApp"
        },
        "SourceArn": {
          "Fn::Sub": [
            "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${__ApiId__}/*/${__Method__}${__Path__}",
            {
              "__Method__": "PUT",
              "__Path__": "/upload",
              "__ApiId__": {
                "Ref": "httpApiguploadToS3Api"
              }
            }
          ]
        },
        "Principal": "apigateway.amazonaws.com"
      }
    }
  }
}